logging.level.org.atmosphere = warn
logging.level.com.influxdb.client.write.events.BackpressureEvent = error
# Hides annoying "Exception in push connection" due to "Connection remotely closed" messages
logging.level.com.vaadin.flow.server.communication.PushAtmosphereHandler = off
spring.mustache.check-template-location = false

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# Set vaadin heartbeat interval to 5 seconds
# We want to notice quickly if a webpage is no longer open,
# So that we can unsubscribe any OPC UA subscriptions
vaadin.heartbeatInterval = 5
# PostgreSQL configuration.
spring.jpa.hibernate.ddl-auto = validate
spring.liquibase.enabled = true
spring.liquibase.change-log = classpath:db/db.changelog.sql
# To improve the performance during development.
# For more information https://vaadin.com/docs/flow/spring/tutorial-spring-configuration.html#special-configuration-parameters
vaadin.whitelisted-packages = com.vaadin,org.vaadin,dev.hilla,com.productionpilot,com.vaadin.componentfactory
#spring.jpa.defer-datasource-initialization = true
spring.sql.init.mode = always
# Set dialect to PostgreSQL
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate Caching
#spring.jpa.properties.hibernate.cache.use_second_level_cache = true
#spring.jpa.properties.hibernate.cache.region.factory_class = org.hibernate.cache.ehcache.EhCacheRegionFactory

# REST API Documentation configuration
springdoc.api-docs.path=/api-docs/v1/
springdoc.swagger-ui.path=/api-docs/v1/swagger-ui.html
vaadin.excludeUrls=/api-docs/**

# Configuration of the Kepware OPC server layer
# These top-level nodes will each be treated as a single device, instead of devices being detected from their subnodes
com.productionpilot.opc.server.kepserver.single-device-nodes = _AdvancedTags,ManualProcessData

# ======================================================================================================================
# Default values, should be overridden
# ======================================================================================================================
# HTTP listening port
server.port=${PORT:8080}

# PostgreSQL / TimescaleDB configuration
spring.datasource.url = jdbc:postgresql://127.0.0.1:5432/productionpilot
spring.datasource.username = changeme
spring.datasource.password = changeme

# OPC UA configuration
# Key pair usage is not implemented yet! Only supports "None" security policy
# meaning an unencrypted connection is used, which is still authenticated with username & password
com.productionpilot.opc.server.url = opc.tcp://localhost:49320/
# By default, the OPC UA server will return a specific hostname in its endpoint
# Use this property to override the server-specified hostname. It is recommended to use the hostname in the URL above.
#com.productionpilot.opc.server.hostname-override = localhost
com.productionpilot.opc.server.username = opc
com.productionpilot.opc.server.password = changeme
# The OPC server driver provides functionality specific to the type of OPC server, such as detecting devices from
# the OPC nodes and filtering out server-specific internal nodes
# Currently, only "raw" and "kepserver" are supported
com.productionpilot.opc.server.driver = raw

# AI Completion configuration
com.productionpilot.openai.model = code-cushman-001
#com.productionpilot.openai.api-token = changeme

# InfluxDB configuration
# If configured, all measurements from the TimescaleDB database will be continuously replicated to InfluxDB
#com.productionpilot.influxdb.url = http://localhost:8086
#com.productionpilot.influxdb.token = my-token
#com.productionpilot.influxdb.org = my-org
#com.productionpilot.influxdb.bucket = my-bucket

# ---- Developer options ----
# Uncomment to enable debug logging
#logging.level.com.productionpilot = debug
# Uncomment to print all SQL queries
#spring.jpa.show-sql=true
